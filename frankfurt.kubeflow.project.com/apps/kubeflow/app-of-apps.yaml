apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: deploykf-app-of-apps
  namespace: argocd
  labels:
    app.kubernetes.io/name: deploykf-app-of-apps
    app.kubernetes.io/part-of: deploykf
spec:
  project: "default"
  source:
    repoURL: "https://github.com/deployKF/deployKF.git"
    targetRevision: "v0.1.5"
    path: "."
    plugin:
      name: "deploykf"
      parameters:
        - name: "source_version"
          string: "0.1.5"
        - name: "values_files"
          array:
            - "./sample-values.yaml"
        - name: "values"
          string: |
            deploykf_dependencies:
              cert_manager:
                enabled: false
                clusterIssuer:
                  enabled: false
                  issuerName: "letsencrypt-production-deploykf-gateway"
              istio:
                charts:
                  istioBase:
                    version: 1.22.0
                  istioDaemon:
                    version: 1.22.0
                meshConfig:
                  accessLogFile: "/dev/stdout" 
                valuesOverrides:
                  istio-daemon:
                    pilot: 
                      resources:
                        requests:
                          cpu: 50m
                          memory: 100Mi
              kyverno:
                clusterPolicies:
                  imagePullSecrets:
                    enabled: true
                    excludeNamespaces:
                      - cert-manager
                      - cluster-autoscaler
                      - default
                      - deploykf-auth
                      - deploykf-dashboard
                      - deploykf-istio-gateway
                      - ebs-csi-driver
                      - falco
                      - flux-system
                      - gemini
                      - gpu-operator
                      - istio-system
                      - kubeflow-argo-workflows
                      - kubeflow
                      - metrics-server
                      - nfs-provisioner
                      - node-problem-detector
                      - prometheus
                      - promtail
                      - sealed-secrets
                    registryCredentials:
                      - existingSecret: "registry-project-com-credentials"
                        existingSecretNamespace: "kubeflow"
                extraManifests:
                    - |
                      apiVersion: bitnami.com/v1alpha1
                      kind: SealedSecret
                      metadata:
                        creationTimestamp: null
                        name: registry-project-com-credentials
                        namespace: kubeflow
                      spec:
                        encryptedData:
                          .dockerconfigjson: ''
                        template:
                          metadata:
                            creationTimestamp: null
                            name: registry-project-com-credentials
                            namespace: kubeflow
                          type: kubernetes.io/dockerconfigjson
            deploykf_core:
              deploykf_auth:
                dex:
                  # ToDo: Prevent plain text user passwords in manifests
                  staticPasswords:
                    - email: "kfadmin@project.com"
                      password:
                        value: "secret-password-here"
                    - email: "user1@project.com"
                      password:
                        value: "secret-password-here"
                    - email: "user2@project.com"
                      password:
                        value: "secret-password-here"
              deploykf_istio_gateway:
                charts:
                  istioGateway: 
                    version: 1.22.0
                extraManifests:
                  - |
                    apiVersion: cert-manager.io/v1
                    kind: ClusterIssuer
                    metadata:
                      name: letsencrypt-production-deploykf-gateway
                    spec:
                      acme:
                        server: https://acme-v02.api.letsencrypt.org/directory
                        email: user1@project.com
                        privateKeySecretRef:
                          name: letsencrypt-production-deploykf-gateway
                        solvers:
                          - dns01:
                              route53:
                                region: eu-central-1
                                accessKeyIDSecretRef:
                                  name: deploykf-route53-credentials-secret
                                  key: AWS_ACCESS_KEY_ID
                                secretAccessKeySecretRef:
                                  name: deploykf-route53-credentials-secret
                                  key: AWS_SECRET_ACCESS_KEY
                            selector:
                              dnsZones:
                                - "project.com"
                  - |
                    apiVersion: bitnami.com/v1alpha1
                    kind: SealedSecret
                    metadata:
                      creationTimestamp: null
                      name: deploykf-route53-credentials-secret
                      namespace: cert-manager
                    spec:
                      encryptedData:
                        AWS_ACCESS_KEY_ID: ''
                        AWS_SECRET_ACCESS_KEY: ''
                      template:
                        metadata:
                          creationTimestamp: null
                          name: deploykf-route53-credentials-secret
                          namespace: cert-manager
                gateway:
                  hostname: kubeflow.project.com
                  ports:
                    http: 80
                    https: 443
                gatewayService:
                  annotations:
                    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
              deploykf_profiles_generator:
                extraManifests:
                  - |
                    apiVersion: bitnami.com/v1alpha1
                    kind: SealedSecret
                    metadata:
                      creationTimestamp: null
                      name: kubeflow-profiles-object-store-credentials
                      namespace: kubeflow
                    spec:
                      encryptedData:
                        AWS_ACCESS_KEY_ID: ''
                        AWS_SECRET_ACCESS_KEY: ''
                      template:
                        metadata:
                          creationTimestamp: null
                          name: kubeflow-profiles-object-store-credentials
                          namespace: kubeflow                    
                profileDefaults:
                  tools:
                    kubeflowPipelines:
                      objectStoreAuth:
                        existingSecret: "kubeflow-profiles-object-store-credentials"
                        existingSecretNamespace: "kubeflow"
                        existingSecretAccessKeyKey: "AWS_ACCESS_KEY_ID"
                        existingSecretSecretKeyKey: "AWS_SECRET_ACCESS_KEY"
                groups:
                  - id: project--admins
                    users:
                      - kfadmin
                  - id: project--users
                    users:
                      - user1
                      - user2
                profiles: 
                  - name: project-test
                    members:
                      - group: project--admins
                        access:
                          role: edit
                          notebooksAccess: true
                      - group: project--users
                        access:
                          role: edit
                          notebooksAccess: true
                  - name: project-production
                    members:
                      - group: project--admins
                        access:
                          role: edit
                          notebooksAccess: true
                      - group: project--users
                        access:
                          role: view
                          notebooksAccess: true
                users:
                  - id: kfadmin
                    email: "kfadmin@project.com"
                  - id: user1
                    email: "user1@project.com"
                  - id: user2
                    email: "user2@project.com"
            deploykf_opt:
              deploykf_minio:
                enabled: false
              deploykf_mysql:
                enabled: false
            kubeflow_tools:
              katib:
                extraManifests:
                  - |
                    apiVersion: helm.toolkit.fluxcd.io/v2
                    kind: HelmRelease
                    metadata:
                      name: katib-mysql
                      namespace: flux-system
                    spec:
                      releaseName: katib-mysql
                      targetNamespace: kubeflow
                      storageNamespace: kubeflow
                      interval: 5m
                      chart:
                        spec:
                          chart: mysql
                          version: 9.23.0
                          sourceRef:
                            kind: HelmRepository
                            name: bitnami
                            namespace: flux-system
                          interval: 1m
                      values:
                        auth:
                          database: kitib
                          existingSecret: kitib-mysql-credentials
                          username: kubeflow
                        primary: 
                          persistence:
                            existingClaim: katib-mysql-data
                          podLabels:
                            sidecar.istio.io/inject: "false"
                  - |
                    apiVersion: bitnami.com/v1alpha1
                    kind: SealedSecret
                    metadata:
                      creationTimestamp: null
                      name: kitib-mysql-credentials
                      namespace: kubeflow
                    spec:
                      encryptedData:
                        mysql-password: ''
                        mysql-replication-password: ''
                        mysql-root-password: '' 
                        mysql-username-katib: ''
                      template:
                        metadata:
                          creationTimestamp: null
                          name: kitib-mysql-credentials
                          namespace: kubeflow
                  - |
                    apiVersion: v1
                    kind: PersistentVolume
                    metadata:
                      finalizers:
                      - kubernetes.io/pv-protection
                      name: katib-mysql-data
                    spec:
                      accessModes:
                      - ReadWriteOnce
                      capacity:
                        storage: 8Gi
                      csi:
                        driver: ebs.csi.aws.com
                        volumeHandle: vol-xxx
                      nodeAffinity:
                        required:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: topology.ebs.csi.aws.com/zone
                              operator: In
                              values:
                              - eu-central-1a
                      persistentVolumeReclaimPolicy: Retain
                      storageClassName: gp3
                      volumeMode: Filesystem
                  - |
                    apiVersion: v1
                    kind: PersistentVolumeClaim
                    metadata:
                      finalizers:
                      - kubernetes.io/pvc-protection
                      name: katib-mysql-data
                      namespace: kubeflow
                    spec:
                      accessModes:
                      - ReadWriteOnce
                      resources:
                        requests:
                          storage: 8Gi
                      storageClassName: gp3
                      volumeMode: Filesystem
                      volumeName: katib-mysql-data
                mysql: 
                  useExternal: true
                  host: katib-mysql.kubeflow.svc.cluster.local
                  port: 3306
                  auth:
                    existingSecret: kitib-mysql-credentials
                    existingSecretUsernameKey: mysql-username-katib
                    existingSecretPasswordKey: mysql-password
              notebooks:
                spawnerFormDefaults:
                  affinityConfig:
                    value: "CPU node"
                    options:
                      - configKey: "CPU node"
                        displayName: "Deploy on dedicated CPU node"
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                                - matchExpressions:
                                    - key: "node-role.kubernetes.io/cpu"
                                      operator: "Exists"
                                    - key: "node-role.kubernetes.io/kubeflow"
                                      operator: "Exists"
                      - configKey: "GPU node"
                        displayName: "Deploy on dedicated GPU node"
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                                - matchExpressions:
                                    - key: "node-role.kubernetes.io/gpu"
                                      operator: "Exists"
                                    - key: "node-role.kubernetes.io/kubeflow"
                                      operator: "Exists"
                  configurations:
                    value:
                      - kubeflow-pipelines-api-token
                  cpu:
                    value: "0.5"
                    limitFactor: "none"
                  gpus: 
                    value:
                      vendor: "nvidia.com/gpu"
                      vendors:
                        - limitsKey: "nvidia.com/gpu"
                          uiName: "nvidia"
                  image: 
                    value: kubeflownotebookswg/jupyter-tensorflow-full:v1.8.0
                  memory: 
                    value: "1.0Gi"
                    limitFactor: "none"
                  tolerationGroup:
                    options:
                      - groupKey: "CPU node"
                        displayName: "Deploy on dedicated CPU node"
                        tolerations:
                          - key: "kubeflow/cpu"
                            operator: "Exists"
                            effect: "NoSchedule"
                      - groupKey: "GPU node"
                        displayName: "Deploy on dedicated GPU node"
                        tolerations:
                          - key: "nvidia.com/gpu"
                            operator: "Exists"
                            effect: "NoSchedule"
                    value: "CPU node"
                  workspaceVolume:
                    value: null
              pipelines:
                bucket:
                  name: frankfurt-deploykf-project-com
                  region: eu-central-1
                extraManifests:
                  - | 
                    apiVersion: helm.toolkit.fluxcd.io/v2
                    kind: HelmRelease
                    metadata:
                      name: ml-pipeline-mysql
                      namespace: flux-system
                    spec:
                      releaseName: ml-pipeline-mysql
                      targetNamespace: kubeflow
                      storageNamespace: kubeflow
                      interval: 5m
                      chart:
                        spec:
                          chart: mysql
                          version: 10.1.0
                          sourceRef:
                            kind: HelmRepository
                            name: bitnami
                            namespace: flux-system
                          interval: 1m
                      values:
                        auth:
                          database: kfp_pipelines
                          existingSecret: ml-pipeline-mysql-credentials
                          username: kubeflow
                        primary: 
                          persistence:
                            existingClaim: ml-pipeline-mysql-data
                          podLabels:
                            sidecar.istio.io/inject: "false"
                  - |
                    apiVersion: bitnami.com/v1alpha1
                    kind: SealedSecret
                    metadata:
                      creationTimestamp: null
                      name: ml-pipeline-mysql-credentials
                      namespace: kubeflow
                    spec:
                      encryptedData:
                        mysql-password: ''
                        mysql-replication-password: ''
                        mysql-root-password: ''
                        mysql-username-ml-pipeline: ''
                      template:
                        metadata:
                          creationTimestamp: null
                          name: ml-pipeline-mysql-credentials
                          namespace: kubeflow
                  - |
                    apiVersion: bitnami.com/v1alpha1
                    kind: SealedSecret
                    metadata:
                      creationTimestamp: null
                      name: kubeflow-pipelines-object-store-credentials
                      namespace: kubeflow
                    spec:
                      encryptedData:
                        AWS_ACCESS_KEY_ID: ''
                        AWS_SECRET_ACCESS_KEY: ''
                      template:
                        metadata:
                          creationTimestamp: null
                          name: kubeflow-pipelines-object-store-credentials
                          namespace: kubeflow
                  - |
                    apiVersion: v1
                    kind: PersistentVolume
                    metadata:
                      finalizers:
                      - kubernetes.io/pv-protection
                      name: ml-pipeline-mysql-data
                    spec:
                      accessModes:
                      - ReadWriteOnce
                      capacity:
                        storage: 8Gi
                      csi:
                        driver: ebs.csi.aws.com
                        volumeHandle: vol-xxx
                      nodeAffinity:
                        required:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: topology.ebs.csi.aws.com/zone
                              operator: In
                              values:
                              - eu-central-1a
                      persistentVolumeReclaimPolicy: Retain
                      storageClassName: gp3
                      volumeMode: Filesystem
                  - |
                    apiVersion: v1
                    kind: PersistentVolumeClaim
                    metadata:
                      finalizers:
                      - kubernetes.io/pvc-protection
                      name: ml-pipeline-mysql-data
                      namespace: kubeflow
                    spec:
                      accessModes:
                      - ReadWriteOnce
                      resources:
                        requests:
                          storage: 8Gi
                      storageClassName: gp3
                      volumeMode: Filesystem
                      volumeName: ml-pipeline-mysql-data
                mysql: 
                  useExternal: true
                  host: ml-pipeline-mysql.kubeflow.svc.cluster.local
                  port: 3306
                  auth:
                    existingSecret: ml-pipeline-mysql-credentials
                    existingSecretUsernameKey: mysql-username-ml-pipeline
                    existingSecretPasswordKey: mysql-password
                mysqlDatabases:
                  cacheDatabase: kfp_cache
                  metadataDatabase: kfp_metadata
                  pipelinesDatabase: kfp_pipelines
                objectStore:
                  useExternal: true
                  host: s3.amazonaws.com
                  port: ""
                  useSSL: true
                  auth:
                    existingSecret: "kubeflow-pipelines-object-store-credentials"
                    existingSecretAccessKeyKey: "AWS_ACCESS_KEY_ID"
                    existingSecretSecretKeyKey: "AWS_SECRET_ACCESS_KEY"
                profileResourceGeneration:
                  kfpApiTokenPodDefault: true         
  destination:
    server: "https://kubernetes.default.svc"
    namespace: "argocd"
